{"version":3,"sources":["webpack://stringQuoteX/webpack/universalModuleDefinition","webpack://stringQuoteX/webpack/bootstrap","webpack://stringQuoteX/./node_modules/is-symbol/index.js","webpack://stringQuoteX/(webpack)/buildin/global.js","webpack://stringQuoteX/./node_modules/is-string/index.js","webpack://stringQuoteX/./node_modules/json3/lib/json3.js","webpack://stringQuoteX/./node_modules/has-symbols/index.js","webpack://stringQuoteX/./node_modules/has-symbols/shams.js","webpack://stringQuoteX/(webpack)/buildin/module.js","webpack://stringQuoteX/(webpack)/buildin/amd-options.js","webpack://stringQuoteX/../src/is-primitive-x.js","webpack://stringQuoteX/../src/has-boxed-string-x.js","webpack://stringQuoteX/../src/has-working-bind-x.js","webpack://stringQuoteX/../src/noop-x.js","webpack://stringQuoteX/../src/util-pusher-x.js","webpack://stringQuoteX/../src/simple-bind-x.js","webpack://stringQuoteX/../src/simple-call-x.js","webpack://stringQuoteX/../src/attempt-x.js","webpack://stringQuoteX/../src/has-symbol-support-x.js","webpack://stringQuoteX/../src/to-string-symbols-supported-x.js","webpack://stringQuoteX/../src/string-quote-x.js"],"names":["root","factory","exports","module","define","amd","$globalThis","ObjectCtr","constructor","objectPrototype","prototype","defineProperty","getGlobalFallback","self","window","global","returnThis","this","get","configurable","__defineGetter__","$$globalThis$$","error","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","enumerable","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","toStr","toString","symToStr","symStringRegex","valueOf","test","isSymbolObject","e","g","Function","strValue","String","hasToStringTag","tryStringObject","isLoader","objectTypes","freeExports","nodeType","freeGlobal","runInContext","context","Number","Date","SyntaxError","TypeError","Math","nativeJSON","JSON","stringify","parse","objectProto","getClass","isProperty","attempt","func","errorFunc","exception","isExtended","has","isSupported","serialized","stringifySupported","toJSON","undefined","parseSupported","length","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","charIndexBuggy","forOwn","callback","Properties","dontEnums","size","isConstructor","isFunction","hasProperty","Escapes","92","34","8","12","10","13","9","toPaddedString","width","slice","serializeDate","getData","year","month","date","time","hours","minutes","seconds","milliseconds","floor","Months","getDay","dateToJSON","nativeStringify","source","filter","nativeToJSON","result","escapeChar","character","charCode","charCodeAt","escaped","reEscape","quote","lastIndex","replace","serialize","properties","whitespace","indentation","stack","type","className","results","element","index","prefix","push","join","pop","Index","Source","fromCharCode","Unescapes","47","98","116","110","102","114","abort","lex","begin","position","isSigned","charAt","temp","hasMembers","update","walk","previousJSON","JSON3","isRestored","origSymbol","hasSymbolSham","getOwnPropertySymbols","iterator","obj","sym","symObj","keys","getOwnPropertyNames","syms","propertyIsEnumerable","getOwnPropertyDescriptor","descriptor","webpackPolyfill","deprecate","paths","children","__webpack_amd_options__","val","boxedString","a1","a2","testThis","boundFn","apply","arg1","arg2","arguments","args","test1","oracle","Ctr","BoundFn","returned","test2","split","max","$split","string","pattern","arrayLike","from","target","iterable","nativeBind","getMax","a","b","assertIsFunction","boundFns","binder","boundLength","f","h","getBoundFn","bindArgs","fn","Empty","getResult","boundArgs","thisArg","bound","$TypeError","nativeApply","$apply","F","V","threw","hasSymbolSupport","pToString","isSymbolFn","castString"],"mappings":"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","file":"string-quote-x.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"stringQuoteX\"] = factory();\n\telse\n\t\troot[\"stringQuoteX\"] = factory();\n})((function () {\n  'use strict';\n\n  var ObjectCtr = {}.constructor;\n  var objectPrototype = ObjectCtr.prototype;\n  var defineProperty = ObjectCtr.defineProperty;\n  var $globalThis;\n  var getGlobalFallback = function() {\n    if (typeof self !== 'undefined') {\n      return self;\n    }\n\n    if (typeof window !== 'undefined') {\n      return window;\n    }\n\n    if (typeof global !== 'undefined') {\n      return global;\n    }\n\n    return void 0;\n  };\n\n  var returnThis = function() {\n    return this;\n  };\n\n  try {\n    if (defineProperty) {\n      defineProperty(objectPrototype, '$$globalThis$$', {\n        get: returnThis,\n        configurable: true\n      });\n    } else {\n      objectPrototype.__defineGetter__('$$globalThis$$', returnThis);\n    }\n\n    $globalThis = typeof $$globalThis$$ === 'undefined' ? getGlobalFallback() : $$globalThis$$;\n\n    delete objectPrototype.$$globalThis$$;\n\n    return $globalThis;\n  } catch (error) {\n    return getGlobalFallback();\n  }\n}()), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","'use strict';\n\nvar toStr = Object.prototype.toString;\nvar hasSymbols = require('has-symbols')();\n\nif (hasSymbols) {\n\tvar symToStr = Symbol.prototype.toString;\n\tvar symStringRegex = /^Symbol\\(.*\\)$/;\n\tvar isSymbolObject = function isRealSymbolObject(value) {\n\t\tif (typeof value.valueOf() !== 'symbol') {\n\t\t\treturn false;\n\t\t}\n\t\treturn symStringRegex.test(symToStr.call(value));\n\t};\n\n\tmodule.exports = function isSymbol(value) {\n\t\tif (typeof value === 'symbol') {\n\t\t\treturn true;\n\t\t}\n\t\tif (toStr.call(value) !== '[object Symbol]') {\n\t\t\treturn false;\n\t\t}\n\t\ttry {\n\t\t\treturn isSymbolObject(value);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n} else {\n\n\tmodule.exports = function isSymbol(value) {\n\t\t// this environment does not support Symbols.\n\t\treturn false && value;\n\t};\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict';\n\nvar strValue = String.prototype.valueOf;\nvar tryStringObject = function tryStringObject(value) {\n\ttry {\n\t\tstrValue.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar strClass = '[object String]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isString(value) {\n\tif (typeof value === 'string') { return true; }\n\tif (typeof value !== 'object') { return false; }\n\treturn hasToStringTag ? tryStringObject(value) : toStr.call(value) === strClass;\n};\n","/*! JSON v3.3.2 | https://bestiejs.github.io/json3 | Copyright 2012-2015, Kit Cambridge, Benjamin Tan | http://kit.mit-license.org */\n;(function () {\n  // Detect the `define` function exposed by asynchronous module loaders. The\n  // strict `define` check is necessary for compatibility with `r.js`.\n  var isLoader = typeof define === \"function\" && define.amd;\n\n  // A set of types used to distinguish objects from primitives.\n  var objectTypes = {\n    \"function\": true,\n    \"object\": true\n  };\n\n  // Detect the `exports` object exposed by CommonJS implementations.\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  // Use the `global` object exposed by Node (including Browserify via\n  // `insert-module-globals`), Narwhal, and Ringo as the default context,\n  // and the `window` object in browsers. Rhino exports a `global` function\n  // instead.\n  var root = objectTypes[typeof window] && window || this,\n      freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && typeof global == \"object\" && global;\n\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  // Public: Initializes JSON 3 using the given `context` object, attaching the\n  // `stringify` and `parse` functions to the specified `exports` object.\n  function runInContext(context, exports) {\n    context || (context = root.Object());\n    exports || (exports = root.Object());\n\n    // Native constructor aliases.\n    var Number = context.Number || root.Number,\n        String = context.String || root.String,\n        Object = context.Object || root.Object,\n        Date = context.Date || root.Date,\n        SyntaxError = context.SyntaxError || root.SyntaxError,\n        TypeError = context.TypeError || root.TypeError,\n        Math = context.Math || root.Math,\n        nativeJSON = context.JSON || root.JSON;\n\n    // Delegate to the native `stringify` and `parse` implementations.\n    if (typeof nativeJSON == \"object\" && nativeJSON) {\n      exports.stringify = nativeJSON.stringify;\n      exports.parse = nativeJSON.parse;\n    }\n\n    // Convenience aliases.\n    var objectProto = Object.prototype,\n        getClass = objectProto.toString,\n        isProperty = objectProto.hasOwnProperty,\n        undefined;\n\n    // Internal: Contains `try...catch` logic used by other functions.\n    // This prevents other functions from being deoptimized.\n    function attempt(func, errorFunc) {\n      try {\n        func();\n      } catch (exception) {\n        if (errorFunc) {\n          errorFunc();\n        }\n      }\n    }\n\n    // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\n    var isExtended = new Date(-3509827334573292);\n    attempt(function () {\n      // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\n      // results for certain dates in Opera >= 10.53.\n      isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&\n        isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\n    });\n\n    // Internal: Determines whether the native `JSON.stringify` and `parse`\n    // implementations are spec-compliant. Based on work by Ken Snyder.\n    function has(name) {\n      if (has[name] != null) {\n        // Return cached feature test result.\n        return has[name];\n      }\n      var isSupported;\n      if (name == \"bug-string-char-index\") {\n        // IE <= 7 doesn't support accessing string characters using square\n        // bracket notation. IE 8 only supports this for primitives.\n        isSupported = \"a\"[0] != \"a\";\n      } else if (name == \"json\") {\n        // Indicates whether both `JSON.stringify` and `JSON.parse` are\n        // supported.\n        isSupported = has(\"json-stringify\") && has(\"date-serialization\") && has(\"json-parse\");\n      } else if (name == \"date-serialization\") {\n        // Indicates whether `Date`s can be serialized accurately by `JSON.stringify`.\n        isSupported = has(\"json-stringify\") && isExtended;\n        if (isSupported) {\n          var stringify = exports.stringify;\n          attempt(function () {\n            isSupported =\n              // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly\n              // serialize extended years.\n              stringify(new Date(-8.64e15)) == '\"-271821-04-20T00:00:00.000Z\"' &&\n              // The milliseconds are optional in ES 5, but required in 5.1.\n              stringify(new Date(8.64e15)) == '\"+275760-09-13T00:00:00.000Z\"' &&\n              // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative\n              // four-digit years instead of six-digit years. Credits: @Yaffle.\n              stringify(new Date(-621987552e5)) == '\"-000001-01-01T00:00:00.000Z\"' &&\n              // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond\n              // values less than 1000. Credits: @Yaffle.\n              stringify(new Date(-1)) == '\"1969-12-31T23:59:59.999Z\"';\n          });\n        }\n      } else {\n        var value, serialized = '{\"a\":[1,true,false,null,\"\\\\u0000\\\\b\\\\n\\\\f\\\\r\\\\t\"]}';\n        // Test `JSON.stringify`.\n        if (name == \"json-stringify\") {\n          var stringify = exports.stringify, stringifySupported = typeof stringify == \"function\";\n          if (stringifySupported) {\n            // A test function object with a custom `toJSON` method.\n            (value = function () {\n              return 1;\n            }).toJSON = value;\n            attempt(function () {\n              stringifySupported =\n                // Firefox 3.1b1 and b2 serialize string, number, and boolean\n                // primitives as object literals.\n                stringify(0) === \"0\" &&\n                // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\n                // literals.\n                stringify(new Number()) === \"0\" &&\n                stringify(new String()) == '\"\"' &&\n                // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\n                // does not define a canonical JSON representation (this applies to\n                // objects with `toJSON` properties as well, *unless* they are nested\n                // within an object or array).\n                stringify(getClass) === undefined &&\n                // IE 8 serializes `undefined` as `\"undefined\"`. Safari <= 5.1.7 and\n                // FF 3.1b3 pass this test.\n                stringify(undefined) === undefined &&\n                // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\n                // respectively, if the value is omitted entirely.\n                stringify() === undefined &&\n                // FF 3.1b1, 2 throw an error if the given value is not a number,\n                // string, array, object, Boolean, or `null` literal. This applies to\n                // objects with custom `toJSON` methods as well, unless they are nested\n                // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\n                // methods entirely.\n                stringify(value) === \"1\" &&\n                stringify([value]) == \"[1]\" &&\n                // Prototype <= 1.6.1 serializes `[undefined]` as `\"[]\"` instead of\n                // `\"[null]\"`.\n                stringify([undefined]) == \"[null]\" &&\n                // YUI 3.0.0b1 fails to serialize `null` literals.\n                stringify(null) == \"null\" &&\n                // FF 3.1b1, 2 halts serialization if an array contains a function:\n                // `[1, true, getClass, 1]` serializes as \"[1,true,],\". FF 3.1b3\n                // elides non-JSON values from objects and arrays, unless they\n                // define custom `toJSON` methods.\n                stringify([undefined, getClass, null]) == \"[null,null,null]\" &&\n                // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\n                // where character escape codes are expected (e.g., `\\b` => `\\u0008`).\n                stringify({ \"a\": [value, true, false, null, \"\\x00\\b\\n\\f\\r\\t\"] }) == serialized &&\n                // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\n                stringify(null, value) === \"1\" &&\n                stringify([1, 2], null, 1) == \"[\\n 1,\\n 2\\n]\";\n            }, function () {\n              stringifySupported = false;\n            });\n          }\n          isSupported = stringifySupported;\n        }\n        // Test `JSON.parse`.\n        if (name == \"json-parse\") {\n          var parse = exports.parse, parseSupported;\n          if (typeof parse == \"function\") {\n            attempt(function () {\n              // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\n              // Conforming implementations should also coerce the initial argument to\n              // a string prior to parsing.\n              if (parse(\"0\") === 0 && !parse(false)) {\n                // Simple parsing test.\n                value = parse(serialized);\n                parseSupported = value[\"a\"].length == 5 && value[\"a\"][0] === 1;\n                if (parseSupported) {\n                  attempt(function () {\n                    // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\n                    parseSupported = !parse('\"\\t\"');\n                  });\n                  if (parseSupported) {\n                    attempt(function () {\n                      // FF 4.0 and 4.0.1 allow leading `+` signs and leading\n                      // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\n                      // certain octal literals.\n                      parseSupported = parse(\"01\") !== 1;\n                    });\n                  }\n                  if (parseSupported) {\n                    attempt(function () {\n                      // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\n                      // points. These environments, along with FF 3.1b1 and 2,\n                      // also allow trailing commas in JSON objects and arrays.\n                      parseSupported = parse(\"1.\") !== 1;\n                    });\n                  }\n                }\n              }\n            }, function () {\n              parseSupported = false;\n            });\n          }\n          isSupported = parseSupported;\n        }\n      }\n      return has[name] = !!isSupported;\n    }\n    has[\"bug-string-char-index\"] = has[\"date-serialization\"] = has[\"json\"] = has[\"json-stringify\"] = has[\"json-parse\"] = null;\n\n    if (!has(\"json\")) {\n      // Common `[[Class]]` name aliases.\n      var functionClass = \"[object Function]\",\n          dateClass = \"[object Date]\",\n          numberClass = \"[object Number]\",\n          stringClass = \"[object String]\",\n          arrayClass = \"[object Array]\",\n          booleanClass = \"[object Boolean]\";\n\n      // Detect incomplete support for accessing string characters by index.\n      var charIndexBuggy = has(\"bug-string-char-index\");\n\n      // Internal: Normalizes the `for...in` iteration algorithm across\n      // environments. Each enumerated key is yielded to a `callback` function.\n      var forOwn = function (object, callback) {\n        var size = 0, Properties, dontEnums, property;\n\n        // Tests for bugs in the current environment's `for...in` algorithm. The\n        // `valueOf` property inherits the non-enumerable flag from\n        // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\n        (Properties = function () {\n          this.valueOf = 0;\n        }).prototype.valueOf = 0;\n\n        // Iterate over a new instance of the `Properties` class.\n        dontEnums = new Properties();\n        for (property in dontEnums) {\n          // Ignore all properties inherited from `Object.prototype`.\n          if (isProperty.call(dontEnums, property)) {\n            size++;\n          }\n        }\n        Properties = dontEnums = null;\n\n        // Normalize the iteration algorithm.\n        if (!size) {\n          // A list of non-enumerable properties inherited from `Object.prototype`.\n          dontEnums = [\"valueOf\", \"toString\", \"toLocaleString\", \"propertyIsEnumerable\", \"isPrototypeOf\", \"hasOwnProperty\", \"constructor\"];\n          // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\n          // properties.\n          forOwn = function (object, callback) {\n            var isFunction = getClass.call(object) == functionClass, property, length;\n            var hasProperty = !isFunction && typeof object.constructor != \"function\" && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || isProperty;\n            for (property in object) {\n              // Gecko <= 1.0 enumerates the `prototype` property of functions under\n              // certain conditions; IE does not.\n              if (!(isFunction && property == \"prototype\") && hasProperty.call(object, property)) {\n                callback(property);\n              }\n            }\n            // Manually invoke the callback for each non-enumerable property.\n            for (length = dontEnums.length; property = dontEnums[--length];) {\n              if (hasProperty.call(object, property)) {\n                callback(property);\n              }\n            }\n          };\n        } else {\n          // No bugs detected; use the standard `for...in` algorithm.\n          forOwn = function (object, callback) {\n            var isFunction = getClass.call(object) == functionClass, property, isConstructor;\n            for (property in object) {\n              if (!(isFunction && property == \"prototype\") && isProperty.call(object, property) && !(isConstructor = property === \"constructor\")) {\n                callback(property);\n              }\n            }\n            // Manually invoke the callback for the `constructor` property due to\n            // cross-environment inconsistencies.\n            if (isConstructor || isProperty.call(object, (property = \"constructor\"))) {\n              callback(property);\n            }\n          };\n        }\n        return forOwn(object, callback);\n      };\n\n      // Public: Serializes a JavaScript `value` as a JSON string. The optional\n      // `filter` argument may specify either a function that alters how object and\n      // array members are serialized, or an array of strings and numbers that\n      // indicates which properties should be serialized. The optional `width`\n      // argument may be either a string or number that specifies the indentation\n      // level of the output.\n      if (!has(\"json-stringify\") && !has(\"date-serialization\")) {\n        // Internal: A map of control characters and their escaped equivalents.\n        var Escapes = {\n          92: \"\\\\\\\\\",\n          34: '\\\\\"',\n          8: \"\\\\b\",\n          12: \"\\\\f\",\n          10: \"\\\\n\",\n          13: \"\\\\r\",\n          9: \"\\\\t\"\n        };\n\n        // Internal: Converts `value` into a zero-padded string such that its\n        // length is at least equal to `width`. The `width` must be <= 6.\n        var leadingZeroes = \"000000\";\n        var toPaddedString = function (width, value) {\n          // The `|| 0` expression is necessary to work around a bug in\n          // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== \"0\"`.\n          return (leadingZeroes + (value || 0)).slice(-width);\n        };\n\n        // Internal: Serializes a date object.\n        var serializeDate = function (value) {\n          var getData, year, month, date, time, hours, minutes, seconds, milliseconds;\n          // Define additional utility methods if the `Date` methods are buggy.\n          if (!isExtended) {\n            var floor = Math.floor;\n            // A mapping between the months of the year and the number of days between\n            // January 1st and the first of the respective month.\n            var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n            // Internal: Calculates the number of days between the Unix epoch and the\n            // first day of the given month.\n            var getDay = function (year, month) {\n              return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\n            };\n            getData = function (value) {\n              // Manually compute the year, month, date, hours, minutes,\n              // seconds, and milliseconds if the `getUTC*` methods are\n              // buggy. Adapted from @Yaffle's `date-shim` project.\n              date = floor(value / 864e5);\n              for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);\n              for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);\n              date = 1 + date - getDay(year, month);\n              // The `time` value specifies the time within the day (see ES\n              // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\n              // to compute `A modulo B`, as the `%` operator does not\n              // correspond to the `modulo` operation for negative numbers.\n              time = (value % 864e5 + 864e5) % 864e5;\n              // The hours, minutes, seconds, and milliseconds are obtained by\n              // decomposing the time within the day. See section 15.9.1.10.\n              hours = floor(time / 36e5) % 24;\n              minutes = floor(time / 6e4) % 60;\n              seconds = floor(time / 1e3) % 60;\n              milliseconds = time % 1e3;\n            };\n          } else {\n            getData = function (value) {\n              year = value.getUTCFullYear();\n              month = value.getUTCMonth();\n              date = value.getUTCDate();\n              hours = value.getUTCHours();\n              minutes = value.getUTCMinutes();\n              seconds = value.getUTCSeconds();\n              milliseconds = value.getUTCMilliseconds();\n            };\n          }\n          serializeDate = function (value) {\n            if (value > -1 / 0 && value < 1 / 0) {\n              // Dates are serialized according to the `Date#toJSON` method\n              // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\n              // for the ISO 8601 date time string format.\n              getData(value);\n              // Serialize extended years correctly.\n              value = (year <= 0 || year >= 1e4 ? (year < 0 ? \"-\" : \"+\") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) +\n              \"-\" + toPaddedString(2, month + 1) + \"-\" + toPaddedString(2, date) +\n              // Months, dates, hours, minutes, and seconds should have two\n              // digits; milliseconds should have three.\n              \"T\" + toPaddedString(2, hours) + \":\" + toPaddedString(2, minutes) + \":\" + toPaddedString(2, seconds) +\n              // Milliseconds are optional in ES 5.0, but required in 5.1.\n              \".\" + toPaddedString(3, milliseconds) + \"Z\";\n              year = month = date = hours = minutes = seconds = milliseconds = null;\n            } else {\n              value = null;\n            }\n            return value;\n          };\n          return serializeDate(value);\n        };\n\n        // For environments with `JSON.stringify` but buggy date serialization,\n        // we override the native `Date#toJSON` implementation with a\n        // spec-compliant one.\n        if (has(\"json-stringify\") && !has(\"date-serialization\")) {\n          // Internal: the `Date#toJSON` implementation used to override the native one.\n          function dateToJSON (key) {\n            return serializeDate(this);\n          }\n\n          // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\n          var nativeStringify = exports.stringify;\n          exports.stringify = function (source, filter, width) {\n            var nativeToJSON = Date.prototype.toJSON;\n            Date.prototype.toJSON = dateToJSON;\n            var result = nativeStringify(source, filter, width);\n            Date.prototype.toJSON = nativeToJSON;\n            return result;\n          }\n        } else {\n          // Internal: Double-quotes a string `value`, replacing all ASCII control\n          // characters (characters with code unit values between 0 and 31) with\n          // their escaped equivalents. This is an implementation of the\n          // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\n          var unicodePrefix = \"\\\\u00\";\n          var escapeChar = function (character) {\n            var charCode = character.charCodeAt(0), escaped = Escapes[charCode];\n            if (escaped) {\n              return escaped;\n            }\n            return unicodePrefix + toPaddedString(2, charCode.toString(16));\n          };\n          var reEscape = /[\\x00-\\x1f\\x22\\x5c]/g;\n          var quote = function (value) {\n            reEscape.lastIndex = 0;\n            return '\"' +\n              (\n                reEscape.test(value)\n                  ? value.replace(reEscape, escapeChar)\n                  : value\n              ) +\n              '\"';\n          };\n\n          // Internal: Recursively serializes an object. Implements the\n          // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\n          var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {\n            var value, type, className, results, element, index, length, prefix, result;\n            attempt(function () {\n              // Necessary for host object support.\n              value = object[property];\n            });\n            if (typeof value == \"object\" && value) {\n              if (value.getUTCFullYear && getClass.call(value) == dateClass && value.toJSON === Date.prototype.toJSON) {\n                value = serializeDate(value);\n              } else if (typeof value.toJSON == \"function\") {\n                value = value.toJSON(property);\n              }\n            }\n            if (callback) {\n              // If a replacement function was provided, call it to obtain the value\n              // for serialization.\n              value = callback.call(object, property, value);\n            }\n            // Exit early if value is `undefined` or `null`.\n            if (value == undefined) {\n              return value === undefined ? value : \"null\";\n            }\n            type = typeof value;\n            // Only call `getClass` if the value is an object.\n            if (type == \"object\") {\n              className = getClass.call(value);\n            }\n            switch (className || type) {\n              case \"boolean\":\n              case booleanClass:\n                // Booleans are represented literally.\n                return \"\" + value;\n              case \"number\":\n              case numberClass:\n                // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\n                // `\"null\"`.\n                return value > -1 / 0 && value < 1 / 0 ? \"\" + value : \"null\";\n              case \"string\":\n              case stringClass:\n                // Strings are double-quoted and escaped.\n                return quote(\"\" + value);\n            }\n            // Recursively serialize objects and arrays.\n            if (typeof value == \"object\") {\n              // Check for cyclic structures. This is a linear search; performance\n              // is inversely proportional to the number of unique nested objects.\n              for (length = stack.length; length--;) {\n                if (stack[length] === value) {\n                  // Cyclic structures cannot be serialized by `JSON.stringify`.\n                  throw TypeError();\n                }\n              }\n              // Add the object to the stack of traversed objects.\n              stack.push(value);\n              results = [];\n              // Save the current indentation level and indent one additional level.\n              prefix = indentation;\n              indentation += whitespace;\n              if (className == arrayClass) {\n                // Recursively serialize array elements.\n                for (index = 0, length = value.length; index < length; index++) {\n                  element = serialize(index, value, callback, properties, whitespace, indentation, stack);\n                  results.push(element === undefined ? \"null\" : element);\n                }\n                result = results.length ? (whitespace ? \"[\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"]\" : (\"[\" + results.join(\",\") + \"]\")) : \"[]\";\n              } else {\n                // Recursively serialize object members. Members are selected from\n                // either a user-specified list of property names, or the object\n                // itself.\n                forOwn(properties || value, function (property) {\n                  var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\n                  if (element !== undefined) {\n                    // According to ES 5.1 section 15.12.3: \"If `gap` {whitespace}\n                    // is not the empty string, let `member` {quote(property) + \":\"}\n                    // be the concatenation of `member` and the `space` character.\"\n                    // The \"`space` character\" refers to the literal space\n                    // character, not the `space` {width} argument provided to\n                    // `JSON.stringify`.\n                    results.push(quote(property) + \":\" + (whitespace ? \" \" : \"\") + element);\n                  }\n                });\n                result = results.length ? (whitespace ? \"{\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"}\" : (\"{\" + results.join(\",\") + \"}\")) : \"{}\";\n              }\n              // Remove the object from the traversed object stack.\n              stack.pop();\n              return result;\n            }\n          };\n\n          // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\n          exports.stringify = function (source, filter, width) {\n            var whitespace, callback, properties, className;\n            if (objectTypes[typeof filter] && filter) {\n              className = getClass.call(filter);\n              if (className == functionClass) {\n                callback = filter;\n              } else if (className == arrayClass) {\n                // Convert the property names array into a makeshift set.\n                properties = {};\n                for (var index = 0, length = filter.length, value; index < length;) {\n                  value = filter[index++];\n                  className = getClass.call(value);\n                  if (className == \"[object String]\" || className == \"[object Number]\") {\n                    properties[value] = 1;\n                  }\n                }\n              }\n            }\n            if (width) {\n              className = getClass.call(width);\n              if (className == numberClass) {\n                // Convert the `width` to an integer and create a string containing\n                // `width` number of space characters.\n                if ((width -= width % 1) > 0) {\n                  if (width > 10) {\n                    width = 10;\n                  }\n                  for (whitespace = \"\"; whitespace.length < width;) {\n                    whitespace += \" \";\n                  }\n                }\n              } else if (className == stringClass) {\n                whitespace = width.length <= 10 ? width : width.slice(0, 10);\n              }\n            }\n            // Opera <= 7.54u2 discards the values associated with empty string keys\n            // (`\"\"`) only if they are used directly within an object member list\n            // (e.g., `!(\"\" in { \"\": 1})`).\n            return serialize(\"\", (value = {}, value[\"\"] = source, value), callback, properties, whitespace, \"\", []);\n          };\n        }\n      }\n\n      // Public: Parses a JSON source string.\n      if (!has(\"json-parse\")) {\n        var fromCharCode = String.fromCharCode;\n\n        // Internal: A map of escaped control characters and their unescaped\n        // equivalents.\n        var Unescapes = {\n          92: \"\\\\\",\n          34: '\"',\n          47: \"/\",\n          98: \"\\b\",\n          116: \"\\t\",\n          110: \"\\n\",\n          102: \"\\f\",\n          114: \"\\r\"\n        };\n\n        // Internal: Stores the parser state.\n        var Index, Source;\n\n        // Internal: Resets the parser state and throws a `SyntaxError`.\n        var abort = function () {\n          Index = Source = null;\n          throw SyntaxError();\n        };\n\n        // Internal: Returns the next token, or `\"$\"` if the parser has reached\n        // the end of the source string. A token may be a string, number, `null`\n        // literal, or Boolean literal.\n        var lex = function () {\n          var source = Source, length = source.length, value, begin, position, isSigned, charCode;\n          while (Index < length) {\n            charCode = source.charCodeAt(Index);\n            switch (charCode) {\n              case 9: case 10: case 13: case 32:\n                // Skip whitespace tokens, including tabs, carriage returns, line\n                // feeds, and space characters.\n                Index++;\n                break;\n              case 123: case 125: case 91: case 93: case 58: case 44:\n                // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\n                // the current position.\n                value = charIndexBuggy ? source.charAt(Index) : source[Index];\n                Index++;\n                return value;\n              case 34:\n                // `\"` delimits a JSON string; advance to the next character and\n                // begin parsing the string. String tokens are prefixed with the\n                // sentinel `@` character to distinguish them from punctuators and\n                // end-of-string tokens.\n                for (value = \"@\", Index++; Index < length;) {\n                  charCode = source.charCodeAt(Index);\n                  if (charCode < 32) {\n                    // Unescaped ASCII control characters (those with a code unit\n                    // less than the space character) are not permitted.\n                    abort();\n                  } else if (charCode == 92) {\n                    // A reverse solidus (`\\`) marks the beginning of an escaped\n                    // control character (including `\"`, `\\`, and `/`) or Unicode\n                    // escape sequence.\n                    charCode = source.charCodeAt(++Index);\n                    switch (charCode) {\n                      case 92: case 34: case 47: case 98: case 116: case 110: case 102: case 114:\n                        // Revive escaped control characters.\n                        value += Unescapes[charCode];\n                        Index++;\n                        break;\n                      case 117:\n                        // `\\u` marks the beginning of a Unicode escape sequence.\n                        // Advance to the first character and validate the\n                        // four-digit code point.\n                        begin = ++Index;\n                        for (position = Index + 4; Index < position; Index++) {\n                          charCode = source.charCodeAt(Index);\n                          // A valid sequence comprises four hexdigits (case-\n                          // insensitive) that form a single hexadecimal value.\n                          if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {\n                            // Invalid Unicode escape sequence.\n                            abort();\n                          }\n                        }\n                        // Revive the escaped character.\n                        value += fromCharCode(\"0x\" + source.slice(begin, Index));\n                        break;\n                      default:\n                        // Invalid escape sequence.\n                        abort();\n                    }\n                  } else {\n                    if (charCode == 34) {\n                      // An unescaped double-quote character marks the end of the\n                      // string.\n                      break;\n                    }\n                    charCode = source.charCodeAt(Index);\n                    begin = Index;\n                    // Optimize for the common case where a string is valid.\n                    while (charCode >= 32 && charCode != 92 && charCode != 34) {\n                      charCode = source.charCodeAt(++Index);\n                    }\n                    // Append the string as-is.\n                    value += source.slice(begin, Index);\n                  }\n                }\n                if (source.charCodeAt(Index) == 34) {\n                  // Advance to the next character and return the revived string.\n                  Index++;\n                  return value;\n                }\n                // Unterminated string.\n                abort();\n              default:\n                // Parse numbers and literals.\n                begin = Index;\n                // Advance past the negative sign, if one is specified.\n                if (charCode == 45) {\n                  isSigned = true;\n                  charCode = source.charCodeAt(++Index);\n                }\n                // Parse an integer or floating-point value.\n                if (charCode >= 48 && charCode <= 57) {\n                  // Leading zeroes are interpreted as octal literals.\n                  if (charCode == 48 && ((charCode = source.charCodeAt(Index + 1)), charCode >= 48 && charCode <= 57)) {\n                    // Illegal octal literal.\n                    abort();\n                  }\n                  isSigned = false;\n                  // Parse the integer component.\n                  for (; Index < length && ((charCode = source.charCodeAt(Index)), charCode >= 48 && charCode <= 57); Index++);\n                  // Floats cannot contain a leading decimal point; however, this\n                  // case is already accounted for by the parser.\n                  if (source.charCodeAt(Index) == 46) {\n                    position = ++Index;\n                    // Parse the decimal component.\n                    for (; position < length; position++) {\n                      charCode = source.charCodeAt(position);\n                      if (charCode < 48 || charCode > 57) {\n                        break;\n                      }\n                    }\n                    if (position == Index) {\n                      // Illegal trailing decimal.\n                      abort();\n                    }\n                    Index = position;\n                  }\n                  // Parse exponents. The `e` denoting the exponent is\n                  // case-insensitive.\n                  charCode = source.charCodeAt(Index);\n                  if (charCode == 101 || charCode == 69) {\n                    charCode = source.charCodeAt(++Index);\n                    // Skip past the sign following the exponent, if one is\n                    // specified.\n                    if (charCode == 43 || charCode == 45) {\n                      Index++;\n                    }\n                    // Parse the exponential component.\n                    for (position = Index; position < length; position++) {\n                      charCode = source.charCodeAt(position);\n                      if (charCode < 48 || charCode > 57) {\n                        break;\n                      }\n                    }\n                    if (position == Index) {\n                      // Illegal empty exponent.\n                      abort();\n                    }\n                    Index = position;\n                  }\n                  // Coerce the parsed value to a JavaScript number.\n                  return +source.slice(begin, Index);\n                }\n                // A negative sign may only precede numbers.\n                if (isSigned) {\n                  abort();\n                }\n                // `true`, `false`, and `null` literals.\n                var temp = source.slice(Index, Index + 4);\n                if (temp == \"true\") {\n                  Index += 4;\n                  return true;\n                } else if (temp == \"fals\" && source.charCodeAt(Index + 4 ) == 101) {\n                  Index += 5;\n                  return false;\n                } else if (temp == \"null\") {\n                  Index += 4;\n                  return null;\n                }\n                // Unrecognized token.\n                abort();\n            }\n          }\n          // Return the sentinel `$` character if the parser has reached the end\n          // of the source string.\n          return \"$\";\n        };\n\n        // Internal: Parses a JSON `value` token.\n        var get = function (value) {\n          var results, hasMembers;\n          if (value == \"$\") {\n            // Unexpected end of input.\n            abort();\n          }\n          if (typeof value == \"string\") {\n            if ((charIndexBuggy ? value.charAt(0) : value[0]) == \"@\") {\n              // Remove the sentinel `@` character.\n              return value.slice(1);\n            }\n            // Parse object and array literals.\n            if (value == \"[\") {\n              // Parses a JSON array, returning a new JavaScript array.\n              results = [];\n              for (;;) {\n                value = lex();\n                // A closing square bracket marks the end of the array literal.\n                if (value == \"]\") {\n                  break;\n                }\n                // If the array literal contains elements, the current token\n                // should be a comma separating the previous element from the\n                // next.\n                if (hasMembers) {\n                  if (value == \",\") {\n                    value = lex();\n                    if (value == \"]\") {\n                      // Unexpected trailing `,` in array literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each array element.\n                    abort();\n                  }\n                } else {\n                  hasMembers = true;\n                }\n                // Elisions and leading commas are not permitted.\n                if (value == \",\") {\n                  abort();\n                }\n                results.push(get(value));\n              }\n              return results;\n            } else if (value == \"{\") {\n              // Parses a JSON object, returning a new JavaScript object.\n              results = {};\n              for (;;) {\n                value = lex();\n                // A closing curly brace marks the end of the object literal.\n                if (value == \"}\") {\n                  break;\n                }\n                // If the object literal contains members, the current token\n                // should be a comma separator.\n                if (hasMembers) {\n                  if (value == \",\") {\n                    value = lex();\n                    if (value == \"}\") {\n                      // Unexpected trailing `,` in object literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each object member.\n                    abort();\n                  }\n                } else {\n                  hasMembers = true;\n                }\n                // Leading commas are not permitted, object property names must be\n                // double-quoted strings, and a `:` must separate each property\n                // name and value.\n                if (value == \",\" || typeof value != \"string\" || (charIndexBuggy ? value.charAt(0) : value[0]) != \"@\" || lex() != \":\") {\n                  abort();\n                }\n                results[value.slice(1)] = get(lex());\n              }\n              return results;\n            }\n            // Unexpected token encountered.\n            abort();\n          }\n          return value;\n        };\n\n        // Internal: Updates a traversed object member.\n        var update = function (source, property, callback) {\n          var element = walk(source, property, callback);\n          if (element === undefined) {\n            delete source[property];\n          } else {\n            source[property] = element;\n          }\n        };\n\n        // Internal: Recursively traverses a parsed JSON object, invoking the\n        // `callback` function for each value. This is an implementation of the\n        // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\n        var walk = function (source, property, callback) {\n          var value = source[property], length;\n          if (typeof value == \"object\" && value) {\n            // `forOwn` can't be used to traverse an array in Opera <= 8.54\n            // because its `Object#hasOwnProperty` implementation returns `false`\n            // for array indices (e.g., `![1, 2, 3].hasOwnProperty(\"0\")`).\n            if (getClass.call(value) == arrayClass) {\n              for (length = value.length; length--;) {\n                update(getClass, forOwn, value, length, callback);\n              }\n            } else {\n              forOwn(value, function (property) {\n                update(value, property, callback);\n              });\n            }\n          }\n          return callback.call(source, property, value);\n        };\n\n        // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\n        exports.parse = function (source, callback) {\n          var result, value;\n          Index = 0;\n          Source = \"\" + source;\n          result = get(lex());\n          // If a JSON string contains multiple tokens, it is invalid.\n          if (lex() != \"$\") {\n            abort();\n          }\n          // Reset the parser state.\n          Index = Source = null;\n          return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[\"\"] = result, value), \"\", callback) : result;\n        };\n      }\n    }\n\n    exports.runInContext = runInContext;\n    return exports;\n  }\n\n  if (freeExports && !isLoader) {\n    // Export for CommonJS environments.\n    runInContext(root, freeExports);\n  } else {\n    // Export for web browsers and JavaScript engines.\n    var nativeJSON = root.JSON,\n        previousJSON = root.JSON3,\n        isRestored = false;\n\n    var JSON3 = runInContext(root, (root.JSON3 = {\n      // Public: Restores the original value of the global `JSON` object and\n      // returns a reference to the `JSON3` object.\n      \"noConflict\": function () {\n        if (!isRestored) {\n          isRestored = true;\n          root.JSON = nativeJSON;\n          root.JSON3 = previousJSON;\n          nativeJSON = previousJSON = null;\n        }\n        return JSON3;\n      }\n    }));\n\n    root.JSON = {\n      \"parse\": JSON3.parse,\n      \"stringify\": JSON3.stringify\n    };\n  }\n\n  // Export for asynchronous module loaders.\n  if (isLoader) {\n    define(function () {\n      return JSON3;\n    });\n  }\n}).call(this);\n","'use strict';\n\nvar origSymbol = global.Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","'use strict';\n\n/* eslint complexity: [2, 17], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","/**\n * Returns true if the value is a primitive.\n *\n * @param {*} [val] - The value to test.\n * @returns {boolean} True if a primitive, otherwise false..\n */\nconst isPrimitive = function isPrimitive(val) {\n  return typeof val === 'object' ? val === null : typeof val !== 'function';\n};\n\nexport default isPrimitive;\n","const string = 'a';\nconst boxedString = {}.constructor(string);\n\n/**\n * Check failure of by-index access of string characters (IE < 9)\n * and failure of `0 in boxedString` (Rhino).\n *\n * `true` if no failure; otherwise `false`.\n *\n * @type boolean\n */\nconst hasBoxed = boxedString[0] === string && 0 in boxedString;\n\nexport default hasBoxed;\n","import noop from 'noop-x';\n\nconst {bind} = noop;\n\nconst test1 = function test1() {\n  let a1 = null;\n  let a2 = null;\n  let context = null;\n  const testThis = [];\n\n  const test1Fn = function test1Fn(arg1, arg2) {\n    /* eslint-disable-next-line babel/no-invalid-this */\n    context = this;\n    a1 = arg1;\n    a2 = arg2;\n\n    /* eslint-disable-next-line prefer-rest-params */\n    return arguments;\n  };\n\n  try {\n    const boundFn = bind.apply(test1Fn, [testThis, 1]);\n    const args = boundFn(2);\n\n    return boundFn.length === 1 && args.length === 2 && a1 === 1 && a2 === 2 && context === testThis;\n  } catch (e) {\n    return false;\n  }\n};\n\nconst test2 = function test2() {\n  let a1 = null;\n  let a2 = null;\n  let context = null;\n  const oracle = [1, 2, 3];\n\n  const Ctr = function Ctr(arg1, arg2) {\n    a1 = arg1;\n    a2 = arg2;\n    context = this;\n\n    return oracle;\n  };\n\n  try {\n    const BoundFn = bind.apply(Ctr, [null]);\n    const returned = new BoundFn(1, 2);\n\n    return BoundFn.length === Ctr.length && returned === oracle && a1 === 1 && a2 === 2 && context !== oracle;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Indicates if the engine has a working bind function.\n *\n * @type {boolean}\n */\nconst isWorking = typeof bind === 'function' && test1() && test2();\n\nexport default isWorking;\n","/**\n * This method returns undefined.\n *\n * @returns {undefined} Always undefined.\n */\nconst noop = function noop() {}; /* eslint-disable-line lodash/prefer-noop */\n\nexport default noop;\n","import isPrimitive from 'is-primitive-x';\nimport isString from 'is-string';\nimport hasBoxed from 'has-boxed-string-x';\nimport hasWorkingBind from 'has-working-bind-x';\n\nconst EMPTY_STRING = '';\nconst {split} = EMPTY_STRING;\nconst {max} = Math;\nconst {bind, call} = isPrimitive;\nexport const stringSplit = function stringSplit(string, pattern) {\n  // noinspection JSUnresolvedFunction\n  return split.call(string, pattern);\n};\n\nexport const $split = hasWorkingBind ? bind.call(call, split) : stringSplit;\n\nexport const getIterable = function getIterable(arrayLike) {\n  // noinspection JSUnresolvedFunction\n  return isString(arrayLike) ? $split(arrayLike, EMPTY_STRING) : arrayLike;\n};\n\n// eslint-disable jsdoc/no-undefined-types\n// noinspection JSCommentMatchesSignature\n/**\n * This pushes or concatenates into a new or existing array.\n *\n * @param {Array} arrayLike - The source.\n * @param {number} [from=0] - The from source index.\n * @param {Array} [target=[]] - The target array.\n * @returns {*} The target array.\n */\n// eslint-enable jsdoc/no-undefined-types\nconst pusher = function pusher(arrayLike, from) {\n  /* eslint-disable-next-line prefer-rest-params */\n  const target = arguments.length > 2 ? arguments[2] : [];\n\n  if (typeof arrayLike !== 'string' && isPrimitive(arrayLike)) {\n    return target;\n  }\n\n  const iterable = hasBoxed ? arrayLike : getIterable(arrayLike);\n  const {length} = iterable;\n  for (let i = max(0, from) || 0; i < length; i += 1) {\n    target[target.length] = arrayLike[i];\n  }\n\n  return target;\n};\n\nexport default pusher;\n","import hasWorkingBind from 'has-working-bind-x';\nimport pusher from 'util-pusher-x';\n\nconst {bind: nativeBind, call} = pusher;\nconst ERROR_MESSAGE = 'bind called on incompatible ';\nconst object = {};\nconst ObjectCtr = object.constructor;\nconst toStringTag = object.toString;\nconst funcType = '[object Function]';\nconst ZERO = 0;\nconst argsOffset = 2;\n\nconst getMax = function getMax(a, b) {\n  return a >= b ? a : b;\n};\n\nconst assertIsFunction = function assertIsFunction(value) {\n  if (typeof value !== 'function' && toStringTag.apply(value) !== funcType) {\n    throw new TypeError(ERROR_MESSAGE + value);\n  }\n};\n\nconst boundFns = [\n  function zero(binder) {\n    return function boundFn() {\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      return binder.apply(this, pusher(arguments));\n    };\n  },\n  function one(binder, boundLength) {\n    return function boundFn(a) {\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      return binder.apply(this, pusher(arguments, boundLength, [a]));\n    };\n  },\n  function two(binder, boundLength) {\n    return function boundFn(a, b) {\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      return binder.apply(this, pusher(arguments, boundLength, [a, b]));\n    };\n  },\n  function three(binder, boundLength) {\n    /* eslint-disable-next-line max-params */\n    return function boundFn(a, b, c) {\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      return binder.apply(this, pusher(arguments, boundLength, [a, b, c]));\n    };\n  },\n  function four(binder, boundLength) {\n    /* eslint-disable-next-line max-params */\n    return function boundFn(a, b, c, d) {\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      return binder.apply(this, pusher(arguments, boundLength, [a, b, c, d]));\n    };\n  },\n  function five(binder, boundLength) {\n    /* eslint-disable-next-line max-params */\n    return function boundFn(a, b, c, d, e) {\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      return binder.apply(this, pusher(arguments, boundLength, [a, b, c, d, e]));\n    };\n  },\n  function six(binder, boundLength) {\n    /* eslint-disable-next-line max-params */\n    return function boundFn(a, b, c, d, e, f) {\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      return binder.apply(this, pusher(arguments, boundLength, [a, b, c, d, e, f]));\n    };\n  },\n  function seven(binder, boundLength) {\n    /* eslint-disable-next-line max-params */\n    return function boundFn(a, b, c, d, e, f, g) {\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      return binder.apply(this, pusher(arguments, boundLength, [a, b, c, d, e, f, g]));\n    };\n  },\n  function eight(binder, boundLength) {\n    /* eslint-disable-next-line max-params */\n    return function boundFn(a, b, c, d, e, f, g, h) {\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      return binder.apply(this, pusher(arguments, boundLength, [a, b, c, d, e, f, g, h]));\n    };\n  },\n];\n\nconst getBoundFn = function getBoundFn(args) {\n  const [binder, target, bindArgs] = args;\n  const boundLength = getMax(ZERO, target.length - getMax(ZERO, bindArgs.length - argsOffset));\n  const fn = boundFns[boundLength];\n  const boundFn = fn ? fn(binder, boundLength) : boundFns[ZERO](binder);\n\n  if (target.prototype) {\n    /* eslint-disable-next-line lodash/prefer-noop */\n    const Empty = function Empty() {};\n\n    Empty.prototype = target.prototype;\n    boundFn.prototype = new Empty();\n    Empty.prototype = null;\n  }\n\n  return boundFn;\n};\n\nconst getResult = function getResult(target, boundArgs) {\n  /* eslint-disable-next-line babel/no-invalid-this */\n  const result = target.apply(this, boundArgs);\n\n  /* eslint-disable-next-line babel/no-invalid-this,babel/new-cap */\n  return ObjectCtr(result) === result ? result : this;\n};\n\nexport const implementation = function bind(target, thisArg) {\n  assertIsFunction(target);\n  /* eslint-disable-next-line prefer-rest-params */\n  const bindArgs = arguments;\n\n  let bound;\n  const binder = function binder() {\n    /* eslint-disable-next-line prefer-rest-params */\n    const boundArgs = pusher(arguments, ZERO, pusher(bindArgs, argsOffset));\n\n    /* eslint-disable-next-line babel/no-invalid-this */\n    return this instanceof bound ? getResult.apply(this, [target, boundArgs]) : target.apply(thisArg, boundArgs);\n  };\n\n  bound = getBoundFn([binder, target, bindArgs]);\n\n  return bound;\n};\n\n/**\n * The bind() method creates a new function that, when called, has its this\n * keyword set to the provided value, with a given sequence of arguments\n * preceding any provided when the new function is called.\n *\n * @function bind\n * @param {Function} target - The target function.\n * @param {*} [thisArg] - The value to be passed as the this parameter to the target\n *  function when the bound function is called. The value is ignored if the\n *  bound function is constructed using the new operator.\n * @param {...*} [args] - Arguments to prepend to arguments provided to the bound\n *  function when invoking the target function.\n * @throws {TypeError} If target is not a function.\n * @returns {Function} The bound function.\n */\nconst $bind = hasWorkingBind ? call.bind(nativeBind) : implementation;\n\nexport default $bind;\n","import pusher from 'util-pusher-x';\nimport bind from 'simple-bind-x';\n\nconst $TypeError = TypeError;\nconst {apply: nativeApply, call: nativeCall} = bind;\nconst $apply = bind(nativeCall, nativeApply);\nconst toStringTag = bind(nativeApply, {}.toString);\nconst ERROR_MESSAGE = ' is not a function';\nconst funcType = '[object Function]';\n\nconst assertIsFunction = function assertIsFunction(value) {\n  if (typeof value !== 'function' && toStringTag(value) !== funcType) {\n    throw new $TypeError(value + ERROR_MESSAGE);\n  }\n\n  return value;\n};\n\n// eslint-disable jsdoc/check-param-names\n// noinspection JSCommentMatchesSignature\n/**\n * The abstract operation Call is used to call the [[Call]] internal method of a function object.\n *\n * @function call\n * @param {Function} F - The target function.\n * @param {*} [V] - The context.\n * @param {Array} [args] - Argument to call the function with.\n * @throws {TypeError} If target is not a function.\n * @returns {*} The the result of invoking the function.\n * @see https://www.ecma-international.org/ecma-262/6.0/#sec-call\n */\n// eslint-enable jsdoc/check-param-names\nconst call = function call(F, V) {\n  /* eslint-disable-next-line prefer-rest-params */\n  return $apply(assertIsFunction(F), V, pusher(arguments[2]));\n};\n\nexport default call;\n","import pusher from 'util-pusher-x';\nimport call from 'simple-call-x';\n\n// eslint-disable jsdoc/check-param-names\n// noinspection JSCommentMatchesSignature\n/**\n * This method attempts to invoke the function, returning either the result or\n * the caught error object. Any additional arguments are provided to the\n * function when it's invoked.\n *\n * @function attempt\n * @param {Function} [fn] - The function to attempt.\n * @param {...*} [args] - The arguments to invoke the function with.\n * @returns {object} Returns an object of the result.\n */\n// eslint-disable jsdoc/check-param-names\nconst attempt = function attempt(fn) {\n  try {\n    return {\n      threw: false,\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      value: call(fn, this, pusher(arguments, 1)),\n    };\n  } catch (e) {\n    return {\n      threw: true,\n      value: e,\n    };\n  }\n};\n\nexport default attempt;\n","import attempt from 'attempt-x';\nimport isSymbol from 'is-symbol';\n\nconst hasSymbolSupport = attempt(() => {\n  /* eslint-disable-next-line compat/compat */\n  return typeof Symbol === 'function' && isSymbol(Symbol(''));\n});\n\n/**\n * Indicates if `Symbol`exists and creates the correct type.\n * `true`, if it exists and creates the correct type, otherwise `false`.\n *\n * @type boolean\n */\nexport default hasSymbolSupport.threw === false && hasSymbolSupport.value === true;\n","import hasSymbols from 'has-symbol-support-x';\nimport isSymbol from 'is-symbol';\n\n/* eslint-disable-next-line compat/compat */\nconst pToString = hasSymbols && Symbol.prototype.toString;\nconst isSymbolFn = typeof pToString === 'function' && isSymbol;\n/** @type {Function} */\nconst castString = ''.constructor;\n\n/**\n * The abstract operation ToString converts argument to a value of type String,\n * however the specification states that if the argument is a Symbol then a\n * 'TypeError' is thrown. This version also allows Symbols be converted to\n * a string. Other uncoercible exotics will still throw though.\n *\n * @param {*} [value] - The value to convert to a string.\n * @returns {string} The converted value.\n */\nconst toStringSymbolsSupported = function toStringSymbolsSupported(value) {\n  return isSymbolFn && isSymbolFn(value) ? pToString.call(value) : castString(value);\n};\n\nexport default toStringSymbolsSupported;\n","import safeToString from 'to-string-symbols-supported-x';\nimport {stringify} from 'json3';\n\n// If the string contains no control characters, no quote characters, and no\n// backslash characters, then we can safely slap some quotes around it.\n// Otherwise we must also replace the offending characters with safe escape\n// sequences.\n\n/**\n * This method wraps a string in double quotes and replaces control characters\n * with safe escape sequences.\n *\n * @param {string} string - The string to safely wrap in double quotes.\n * @returns {string} The wrapped string.\n */\nconst quote = function quote(string) {\n  return stringify(safeToString(string));\n};\n\nexport default quote;\n"],"sourceRoot":""}